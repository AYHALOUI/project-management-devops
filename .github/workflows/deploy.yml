name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Flask app
      run: |
        python -c "import app; print('Flask app imports successfully')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOSTNAME: ${{ secrets.EC2_HOST }}
        USER_NAME: ec2-user
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        
        # Copy files directly - NO GIT NEEDED!
        scp -o StrictHostKeyChecking=no -i private_key app.py ${USER_NAME}@${HOSTNAME}:~/Gestion_Project/
        scp -o StrictHostKeyChecking=no -i private_key requirements.txt ${USER_NAME}@${HOSTNAME}:~/Gestion_Project/
        scp -o StrictHostKeyChecking=no -i private_key Dockerfile ${USER_NAME}@${HOSTNAME}:~/Gestion_Project/
        scp -o StrictHostKeyChecking=no -i private_key docker-compose.yml ${USER_NAME}@${HOSTNAME}:~/Gestion_Project/
        
        # Restart containers
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          cd Gestion_Project &&
          docker-compose down &&
          docker-compose up --build -d
        '
        rm -f private_key
